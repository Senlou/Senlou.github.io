<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>张浩铭的个人博客</title>
  
  <subtitle>生活明朗 万物可爱</subtitle>
  <link href="https://senlou.github.io/atom.xml" rel="self"/>
  
  <link href="https://senlou.github.io/"/>
  <updated>2025-04-21T06:44:41.182Z</updated>
  <id>https://senlou.github.io/</id>
  
  <author>
    <name>张浩铭</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Arduino学习</title>
    <link href="https://senlou.github.io/posts/f4285a71.html"/>
    <id>https://senlou.github.io/posts/f4285a71.html</id>
    <published>2025-04-20T03:20:17.506Z</published>
    <updated>2025-04-21T06:44:41.182Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LED闪烁"><a href="#LED闪烁" class="headerlink" title="LED闪烁"></a>LED闪烁</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当你给开发板通电后或者按下复位按钮后，setup函数运行一次</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">setup</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//初始化LED_BUTLTIN数字引脚为输出模式</span></span><br><span class="line">    <span class="built_in">pinMod</span>(LED_BUILTIN,OUTPUT);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//loop 函数永远会反复的运行</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">loop</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">digitalWrit</span>(LED_BUILTIN,HIGH);  <span class="comment">//点亮LED（高电平）</span></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);    <span class="comment">//等待1秒</span></span><br><span class="line">    <span class="built_in">digitalWrite</span>(LED_BUILTIN,LOW);  <span class="comment">//将电平设置为低来熄灭LED</span></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1000</span>);    <span class="comment">//等待1秒</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>HIGH有电流<br>LOW没电流<br>pinMode()<br>说明<br>通过pinMode()函数，你可以将Arduino的引脚配置为以下三种模式：</p><ul><li>输出(OUTPUT)模式</li><li>输入(INPUT)模式</li><li>输入上拉（INPUT_PULLUP）模式 （仅支持Arduino 1.0.1以后版本）<br>在输入上拉（INPUT_PULLUP）模式中，Arduino将开启引脚的内部上拉电阻，实现上拉输入功能。一旦将引脚设置为输入（INPUT）模式，Arduino内部上拉电阻将被禁用。<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引脚2链接有按键开关，给他一个名字：</span></span><br><span class="line"><span class="type">int</span> pushButton=<span class="number">2</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//串口通信初始化，每秒9600位</span></span><br><span class="line">    Serial.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">    <span class="comment">//设置按键引脚为输入</span></span><br><span class="line">    <span class="built_in">pinMode</span>(pushButton,INPUT);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//读取输入引脚：</span></span><br><span class="line">    <span class="type">int</span> buttonState=<span class="built_in">digitalRead</span>(pushButton);</span><br><span class="line">    <span class="comment">//显示按键状态</span></span><br><span class="line">    Serial.<span class="built_in">println</span>(buttnState);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1</span>);   <span class="comment">//为确保程序稳定运行进行短暂停止</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">//start serial connection</span></span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">  <span class="comment">//configure pin 2 as an input and enable the internal pull-up resistor</span></span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">2</span>, INPUT_PULLUP);</span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">13</span>, OUTPUT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">//read the pushbutton value into a variable</span></span><br><span class="line">  <span class="type">int</span> sensorVal = <span class="built_in">digitalRead</span>(<span class="number">2</span>);</span><br><span class="line">  <span class="comment">//print out the value of the pushbutton</span></span><br><span class="line">  Serial.<span class="built_in">println</span>(sensorVal);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Keep in mind the pull-up means the pushbutton&#x27;s logic is inverted. It goes</span></span><br><span class="line">  <span class="comment">// HIGH when it&#x27;s open, and LOW when it&#x27;s pressed. Turn on pin 13 when the</span></span><br><span class="line">  <span class="comment">// button&#x27;s pressed, and off when it&#x27;s not:</span></span><br><span class="line">  <span class="keyword">if</span> (sensorVal == HIGH) &#123;</span><br><span class="line">    <span class="built_in">digitalWrite</span>(<span class="number">13</span>, LOW);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">digitalWrite</span>(<span class="number">13</span>, HIGH);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;LED闪烁&quot;&gt;&lt;a href=&quot;#LED闪烁&quot; class=&quot;headerlink&quot; title=&quot;LED闪烁&quot;&gt;&lt;/a&gt;LED闪烁&lt;/h1&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>高等数学</title>
    <link href="https://senlou.github.io/posts/93e4730e.html"/>
    <id>https://senlou.github.io/posts/93e4730e.html</id>
    <published>2025-04-15T02:30:26.613Z</published>
    <updated>2025-05-17T03:19:39.908Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><h2 id="函数概念"><a href="#函数概念" class="headerlink" title="函数概念"></a>函数概念</h2><ul><li>考点<ul><li>定义域：指x的取值范围</li><li>对应法则：指对x的加工/处理方式，用f,g,h…</li></ul></li></ul><h3 id="定义域及对应法则对应法则-Leftrightarrow-两要素"><a href="#定义域及对应法则对应法则-Leftrightarrow-两要素" class="headerlink" title="$定义域及对应法则对应法则 \Leftrightarrow 两要素$"></a>$定义域及对应法则对应法则 \Leftrightarrow 两要素$</h3><ul><li>定义域考点：<ol><li>具体函数求定义域</li><li>抽象函数求定义域</li></ol></li></ul><h2 id="求具体函数定义域"><a href="#求具体函数定义域" class="headerlink" title="求具体函数定义域"></a>求具体函数定义域</h2><ul><li>常见具体函数定义域<ol><li>$y=\frac{1}{x},x \neq 0$</li><li>$y=\sqrt[2n]{x},x x \geq 0$</li><li>$y=\sqrt[2n+1]{x},x \in (-\infty,+\infty)$</li><li>$y=\log_a(x),x &gt; 0.\ln x,x&gt;0$</li><li>$y=\tan x,x \neq k\pi +\frac{\pi}{2}$</li><li>$y=\cot x,\pi \neq k\pi$</li><li>$y=\arctan x,y=\arccos x$</li><li>$y=\arcsin x,y=\arccos x,x\in [-1,1]$</li></ol></li></ul><h2 id="求抽象函数定义域"><a href="#求抽象函数定义域" class="headerlink" title="求抽象函数定义域"></a>求抽象函数定义域</h2><p>题型：已知$f(□)$的定义域，求$f(△)$中x的范围（定义域）<br>解法：两函数对应法则一样，自各自括号内范围因相同</p><h2 id="求函数表达式"><a href="#求函数表达式" class="headerlink" title="求函数表达式"></a>求函数表达式</h2><p>考点：根据函数对应法则，求函数表达式</p><ul><li>换元法：<br>$\text{设:}f(\frac{1}{x}-1)=\frac{x}{2x-1}\text{求}f(x)$<br>$\text{解:令}\frac{1}{x}-1=t,x=\frac{1}{t+1}$<br>$\text{原式：}f(t)=\frac{1}{1-t}$<br>$\qquad\text{x}=\frac{1}{1-x}$</li><li>配凑法：<br>三角函数</li><li>配方法：将右边凑成□的形式<br>三角函数$(a\pm b)=a^2 \pm 2ab + b^2$<br>$\text{设：}f(\cos^2x)=\tan^2x,\text{求}f(x)f(2x)$<br>$\qquad\tan^2x=\frac{\sin^2x}{\cos x}=\frac{1-\cos^x}{cos^2x}$<br>$\qquad\sin^2+\cos^2$<h2 id="反函数"><a href="#反函数" class="headerlink" title="反函数"></a>反函数</h2></li><li>定义：以y为自变量，x为因变量的函数记为$y=f^{-1}(x)$</li><li>掌握：求解反函数的过程<br>求$y=x-2$的反函数<br>因为：$x=y+2$<br>反函数为：$y=x+2$<br>求$y=e^x+1$的反函数<script type="math/tex; mode=display">\ln a^b=b\ln a</script><script type="math/tex; mode=display">\ln e=1,\ln 1=0</script>$\ln e^x=\ln (y-1)$<br>$x\ln e=\ln(y-1)$<br>$x=\ln (y-1)$<br>反函数:$y=\ln (x-1)$<h2 id="常见的基本函数"><a href="#常见的基本函数" class="headerlink" title="常见的基本函数"></a>常见的基本函数</h2></li></ul><ol><li>常数项函数：$y=c$</li><li>幂函数：$y=x^a,y=x,y=x^2,y=x^3,y=\sqrt{x}=x^\frac{1}{2}$<ul><li>幂函数公式：</li></ul><ol><li>$x^a \cdot x^b=x^{a+b}$</li><li>$\frac{x^a}{x^b}=x^{a-b}$</li><li>$\sqrt[b]{x^a}=x^{\frac{a}{b}}$</li><li>$x^{-a}=\frac{1}{x^a}$</li></ol></li><li>指数函数：$y=a^x(a&gt;0),y=e^x,e=2.718$</li><li>对数函数：$y=\log_{a}x;x=a^y,*\ln x=\log_e x$<ol><li>$y=\log_a^x\Leftrightarrow x=a^y$</li><li>$y=\log_e^x=\ln x\Leftrightarrow x=e^y$<br>四则运算：$\ln a+\ln b=\ln a\cdot b\qquad \ln a^b=b\ln a$<br>$\ln a-\ln b=\ln\frac{a}{b}\qquad u^v=e^{v\ln u}=e^{\ln u^v}$</li></ol></li><li>三角函数：$y=\sin x,y=\cos x,\arctan x,y=\tan x$<ul><li>常用三角函数关系<br>勾股定理：$a^2+b^2=c^2$<br>$\sin x=\frac{y}{r}$</li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第一章&quot;&gt;&lt;a href=&quot;#第一章&quot; class=&quot;headerlink&quot; title=&quot;第一章&quot;&gt;&lt;/a&gt;第一章&lt;/h1&gt;&lt;h2 id=&quot;函数概念&quot;&gt;&lt;a href=&quot;#函数概念&quot; class=&quot;headerlink&quot; title=&quot;函数概念&quot;&gt;&lt;/a&gt;函数概</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>物联网学习</title>
    <link href="https://senlou.github.io/posts/786671a1.html"/>
    <id>https://senlou.github.io/posts/786671a1.html</id>
    <published>2025-04-14T04:14:00.402Z</published>
    <updated>2025-04-14T04:58:42.171Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、基础阶段"><a href="#一、基础阶段" class="headerlink" title="一、基础阶段"></a>一、基础阶段</h1><h2 id="1-硬件与电子基础"><a href="#1-硬件与电子基础" class="headerlink" title="1.硬件与电子基础"></a>1.硬件与电子基础</h2><ul><li>学习内容：<ul><li>电路基础（电阻、电容、电感、欧姆定律等）</li><li>常见电子元器件（传感器、执行器、ADC/DAC等）</li><li>单片机（如Arduino、ESP8266/ESP32、STM32）</li></ul></li><li>实践项目：<ul><li>用Arduino点亮LED、读取温湿度传感器（如DHT11）</li><li>用ESP8266连接Wi-Fi并上传数据。<h2 id="2-编程与网络"><a href="#2-编程与网络" class="headerlink" title="2.编程与网络"></a>2.编程与网络</h2></li></ul></li><li>核心语言：<ul><li>C/C++：嵌入式开发主流语言</li><li>Python:用于数据分析、后端开发(如Django/Flask)和脚本控制</li></ul></li><li>学习重点：<ul><li>掌握基本语法、函数、数据结构（如列表、字典）</li><li>学习通过串口与硬件通信（如PySerial）<h2 id="3-网络与通信协议"><a href="#3-网络与通信协议" class="headerlink" title="3.网络与通信协议"></a>3.网络与通信协议</h2></li></ul></li><li>基础协议：<ul><li>有线通信：UART、SPI、I2C</li><li>无限通信：Wi-Fi\蓝牙（BLE）、Zigbee、LoRa、NB-IoT</li></ul></li><li>物联网协议：<ul><li>MQTT（轻量级发布/订阅协议，适合低带宽场景）</li><li>CoAP（基于REST的协议，适合资源受限设备）</li><li>HTTP/WebSocket（用于云端交互）<h2 id="操作系统与嵌入式开发"><a href="#操作系统与嵌入式开发" class="headerlink" title="操作系统与嵌入式开发"></a>操作系统与嵌入式开发</h2></li></ul></li><li>实时操作系统（RTOS）：<ul><li>FreeRTOS、Zephyr（用于多任务调度）</li></ul></li><li>Linux基础：<ul><li>树莓派（Raspberry Pi）开发，学习Linux命令和Shell脚本。<h1 id="二、进阶阶段"><a href="#二、进阶阶段" class="headerlink" title="二、进阶阶段"></a>二、进阶阶段</h1></li></ul></li><li>主流物联网平台：<ul><li>阿里云IoT、AWS IoT、腾讯云IoT、Google Cloud IoT</li><li>开源平台：Home Assistant、ThingsBoard（用于设备管理和可视化）</li></ul></li><li>学习内容：<ul><li>设备注册、数据上报、规则引擎、OTA升级</li><li>使用MQTT或HTTP与云端交互<h2 id="2-数据处理与分析"><a href="#2-数据处理与分析" class="headerlink" title="2. 数据处理与分析"></a>2. 数据处理与分析</h2></li></ul></li><li>数据存储：<ul><li>数据库：MySQL（关系型）、InfluxDB（时序数据库）、MongoDB（NoSQL）</li></ul></li><li>数据分析：<ul><li>用Python的Pandas、NumPy处理数据</li><li>可视化工具：Grafana、Tableau</li></ul></li><li>边缘计算：<ul><li>在设备端进行初步数据处理（如TensorFlow Lite for Microcontrollers）<h2 id="前端与后端开发"><a href="#前端与后端开发" class="headerlink" title="前端与后端开发"></a>前端与后端开发</h2></li></ul></li><li>后端开发：<ul><li>用Node.js、Python（Django/Flask）搭建服务器</li><li>RESTful API设计</li></ul></li><li>前端开发：<ul><li>Web界面：HTML/CSS/JavaScript + Vue.js/React</li><li>移动端：Android（Kotlin）或iOS（Swift）开发App<h2 id="4-安全与隐私"><a href="#4-安全与隐私" class="headerlink" title="4.安全与隐私"></a>4.安全与隐私</h2></li></ul></li><li>物联网安全：<ul><li>加密通信（TLS/SSL）、设备认证（OAuth2.0、X.509证书）</li><li>常见攻击防范（DDoS、中间人攻击）<h2 id="三、专项领域"><a href="#三、专项领域" class="headerlink" title="三、专项领域"></a>三、专项领域</h2></li></ul></li></ul><ol><li>智能家居：<ul><li>学习Home Assistant、OpenHAB，集成多种设备（灯光、安防）</li></ul></li><li>工业物联网（IIoT）：<ul><li>PLC通信（Modbus协议）、工业网关开发。</li></ul></li><li>智慧城市：<ul><li>低功耗广域网（LPWAN：LoRa、NB-IoT）、大规模传感器部署</li></ul></li><li>人工智能与物联网（AIoT）：<ul><li>在边缘设备部署AI模型（如图像识别、异常检测）。</li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、基础阶段&quot;&gt;&lt;a href=&quot;#一、基础阶段&quot; class=&quot;headerlink&quot; title=&quot;一、基础阶段&quot;&gt;&lt;/a&gt;一、基础阶段&lt;/h1&gt;&lt;h2 id=&quot;1-硬件与电子基础&quot;&gt;&lt;a href=&quot;#1-硬件与电子基础&quot; class=&quot;headerlink</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>前端教程</title>
    <link href="https://senlou.github.io/posts/58ddbfe.html"/>
    <id>https://senlou.github.io/posts/58ddbfe.html</id>
    <published>2025-04-12T03:59:55.000Z</published>
    <updated>2025-04-12T09:08:05.567Z</updated>
    
    <content type="html"><![CDATA[<div class="tip "><p>default</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;tip &quot;&gt;&lt;p&gt;default&lt;/p&gt;
&lt;/div&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hexo搭建个人博客教程</title>
    <link href="https://senlou.github.io/posts/dfb8a81f.html"/>
    <id>https://senlou.github.io/posts/dfb8a81f.html</id>
    <published>2024-06-25T02:39:05.000Z</published>
    <updated>2024-07-21T13:26:25.440Z</updated>
    
    <content type="html"><![CDATA[<p>$a$</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;$a$&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://senlou.github.io/posts/4a17b156.html"/>
    <id>https://senlou.github.io/posts/4a17b156.html</id>
    <published>2024-06-07T14:48:31.550Z</published>
    <updated>2024-06-08T14:06:26.029Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
